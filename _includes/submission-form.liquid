{% comment %}
  Netlify form integation

      start - beginiing of form

        name - form name - required
        version - version of form
        action - url to send to - defaulty to form-action
        method - http verb  for submission - get or post (default post)
        ref - form ref - sent in form hidden field (default nil)
        success - url to redirect to when succeeded
        failure - url to redirect to when failed
        onsubmit - function to call for onsubmit event
        args - string of args to pass to function "foo:bar,wibble:wobble"

      end - end of form

{% endcomment %}

{%- if include.type == 'start' -%}
  {%- if include.action == nil -%}
    {% assign action = "/.netlify/functions/form-action" %}
  {% else %}
    {% assign action = include.action %}
  {%- endif -%}
  {%- if include.method == nil -%}
    {% assign method = "post" %}
  {% else %}
    {% assign method = include.method %}
  {% endif -%}
  {%- if firstForm == nil -%}
    {% assign firstForm = true %}
  {%- else -%}
    {% assign firstForm = false %}
  {% endif -%}
  {%- if include.onsubmit %}
    {% assign onsubmit = include.onsubmit %}
  {% endif -%}

  <form name="{{ include.name }}" method="{{ method }}" action="{{ action }}">
    <input type="hidden" name="form_name" value="{{ include.name }}">
    <input type="hidden" name="form_version" value="{{ include.version }}">
    <input type="hidden" name="submission_ref" value="{{ include.ref }}">
    <input type="hidden" name="submission_date" >
    <input type="hidden" name="success" value="{{ include.success }}">
    <input type="hidden" name="failure" value="{{ include.failure }}">
    {%- if include.args -%}
    {% assign args = include.args | split: "," %}
      {%- for arg in args %}
        {% assign argt = arg | split: ":" %}
        <input type="hidden" name="{{argt[0] | strip }}" value="{{ argt[1] | strip }}">
      {% endfor -%}
    {% endif -%}
{%- elsif include.type == 'end' -%}
  </form>
  {% if firstForm == true %}
    <script>
      // Adds check for one or more checkboxes in a required group
      // TODO handle more than one form
      const form = document.querySelector('form')
      const submitButton = form.querySelector('button[type="submit"]')
      submitButton.addEventListener('click', (event) => {
        const requiredCheckboxes = form.querySelectorAll('input[type="checkbox"][required][group]')
        const groups = Array.from(requiredCheckboxes).map((n) => n.getAttribute('group'))
        const uniqueGroups = [...new Set(groups)]

        uniqueGroups.forEach((groupName) => {
          const checkboxs = form.querySelectorAll(`input[type="checkbox"][group="${groupName}"]`)
          const checkedCheckboxs = form.querySelectorAll(`input[type="checkbox"][group="${groupName}"]:checked`)

          // if any checkbox in the group is checked we removed required from them all
          if (checkedCheckboxs.length) {
            for (let checkbox of checkboxs) {
              checkbox.required = false
            }
          }
        })
      })
    {%- if onsubmit %}
      form.onsubmit = {{ onsubmit }}
    {% endif -%}
    </script>
  {% endif %}
{%- endif -%}
